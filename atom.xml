<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>逼格运维说</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-13T19:51:07.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Andy Xu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ITers们,请注意你们的身体</title>
    <link href="http://yoursite.com/2017/09/14/ITers%E4%BB%AC-%E8%AF%B7%E6%B3%A8%E6%84%8F%E4%BD%A0%E4%BB%AC%E7%9A%84%E8%BA%AB%E4%BD%93/"/>
    <id>http://yoursite.com/2017/09/14/ITers们-请注意你们的身体/</id>
    <published>2017-09-13T19:05:39.000Z</published>
    <updated>2017-09-13T19:51:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近加班也不算太严重，不过因为赶上新项目的开工，需要花费一些额外的功夫去研究一些技术的使用场景，连续劳累了一个月之后，最终的结果就是不管晚上几点睡，第二天从来不会自动醒过来，并且随之而来身体上的体验就是左眼皮不停的再跳，跳到你感觉心烦仍不罢休，有天我还专门和朋友同事开玩笑说，“可能最近会有什么喜事吧，左眼睛一直在跳”。后来我还专门在知乎，以及贴吧之类的论坛上去查找一些相关的信息，得到一致的结论就是：有个毛线的喜事，是因为你却觉！</p>
<p>好吧，看来在一段时间内，如果作息还有生活不规律，身体会提前给你警告。</p>
<p>其实搞it经常都会有两两种身体上的问题：一个是颈椎不好，另外一个是腰不好。这两个问题可算是在我身体上体现的淋漓尽致了，因为我在这两个问题上面可算是吃了不少苦头，导致我现在是按摩院和健身房的常客，经常回去做个肩颈按摩或者去健身房跑跑步，为的就是能够稍微减轻一些身体上的痛苦，同时也能够更加保重自己的身体。</p>
<p>上周五的时候，突然感觉腰有点不舒服，也就没有在意就去准备参加太原马拉松去了，整个马拉松跑的很爽很溜，毕竟是人生第一次跑马，最终也跑到了自己期望的成绩。</p>
<p><img src="/images/tymls-1.jpeg" alt="太马奖牌"><br><img src="/images/tymls-2.jpeg" alt="太马成绩"><br><img src="/imagestymls-3.jpeg" alt="太马路线"></p>
<p>跑完整个马拉松之后的这几天里，身体到没有其他部位的不舒服，但唯独腰却很不舒服，不能久坐，时间一长就会感觉到一种难以言表的疼痛。看过医生并且去中医按摩的结果是，坐姿不正和长时间坐着办公造成的腰肌轻微劳损。So，最近不得不站着办公，没事的时候，也会刻意的去捶捶腰。突然之间感觉搞我们这行的还蛮辛苦的，以后还是得更加注意身体。</p>
<p>本以为我挺辛苦的，昨晚八点多一业务开发来找我帮他们处理问题，我说你们为啥一到下班七八点就来找我呢？为啥不在上班时间找我处理呢？他说了句，“哥啊，我们哪有下班和上班的时间区分啊！”，真的感觉他们比我们要辛苦多了。后来想了想，的确是，他们那些业务研发，经常为了赶项目进度连续好些天工作到凌晨一二点，然后早上九点前又按时来公司上班。所以这也就不难理解，为啥搞it得经常会出现一些意外的情况，但我还是觉得，工作再怎么重要，还是得注意休息，保重身体，不然业务做的再好，钱赚的再多，又有毛用呢，已经脱离了我们来到这个世上的最初的目标。</p>
<p>所以，那些搞IT的兄弟姐们们，还是建议你们平时注意下自己的身体状况，多锻炼锻炼，加班干活适可而止就行了！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近加班也不算太严重，不过因为赶上新项目的开工，需要花费一些额外的功夫去研究一些技术的使用场景，连续劳累了一个月之后，最终的结果就是不管晚上几点睡，第二天从来不会自动醒过来，并且随之而来身体上的体验就是左眼皮不停的再跳，跳到你感觉心烦仍不罢休，有天我还专门和朋友同事开玩笑说
    
    </summary>
    
      <category term="生活思考" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E6%80%9D%E8%80%83/"/>
    
    
      <category term="工作" scheme="http://yoursite.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感悟" scheme="http://yoursite.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile-etcd</title>
    <link href="http://yoursite.com/2017/08/26/Dockerfile-etcd/"/>
    <id>http://yoursite.com/2017/08/26/Dockerfile-etcd/</id>
    <published>2017-08-26T09:56:15.000Z</published>
    <updated>2017-08-29T15:43:53.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本篇文章手把手教你如何使用Dockerfile构建自己etcd镜像，并且已经提供基于etcd3.0.10 的image供读者使用，用户可以快速使用docker image构建自己的etcd集群环境</p>
</blockquote>
<a id="more"></a>
<h3 id="一、etcd镜像的Dockerfile文件结构"><a href="#一、etcd镜像的Dockerfile文件结构" class="headerlink" title="一、etcd镜像的Dockerfile文件结构"></a>一、etcd镜像的Dockerfile文件结构</h3><p><code>注意：优秀的docker镜像源文件都是会尝试去除所有依赖的，也即是该文件无论被谁拿走使用，都可以快速构建属于自己的image</code></p>
<p>etcd镜像的Dockerfile项目文件结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">$ tree .</div><div class="line">.</div><div class="line">├──Dockerfile</div><div class="line">├──docker-entrypoint.sh</div><div class="line"></div><div class="line"></div><div class="line"># Dockerfile 文件</div><div class="line">$ cat Dockerfile</div><div class="line">FROM centos-biaoge</div><div class="line">MAINTAINER 371990778@qq.com</div><div class="line">ENV LANG=zh_CN.UTF-8;\</div><div class="line">    LC_ALL=zh_CN.UTF-8;\</div><div class="line">    TZ=&quot;Asia/Shanghai&quot;;\</div><div class="line">    TERM=xterm;\</div><div class="line">    DOWNLOAD=https://github.com/coreos/etcd/releases/download/v3.0.10/ \</div><div class="line">    ETCDVERSION=etcd-v3.0.10-linux-amd64 \</div><div class="line">    USER=admin </div><div class="line">RUN yum install mkdir curl wget tar chown unzip -y;\</div><div class="line">    useradd $&#123;USER&#125; ;\</div><div class="line">    mkdir -p /export/&#123;servers,Logs,packages,Apps,Shell&#125;;\</div><div class="line">    wget $&#123;DOWNLOAD&#125;$&#123;ETCDVERSION&#125;.tar.gz &amp;&amp; tar -zxf $&#123;ETCDVERSION&#125;.tar.gz -C /export/servers/ &amp;&amp; \</div><div class="line">    /bin/rm -rf $&#123;ETCDVERSION&#125;.tar.gz;\</div><div class="line">    chown -R $&#123;USER&#125;.$&#123;USER&#125; /export ;\</div><div class="line">    ln -s /export/servers/$&#123;ETCDVERSION&#125;/etcd* /usr/bin/;</div><div class="line">EXPOSE 2379 2380</div><div class="line">COPY docker-entrypoint.sh /</div><div class="line">ENTRYPOINT [&quot;/docker-entrypoint.sh&quot;]</div><div class="line"></div><div class="line"># 镜像启动脚本</div><div class="line">$ cat docker-entrypoint.sh</div><div class="line">#!/bin/bash</div><div class="line">#Filename:docker-entrypoint.sh</div><div class="line">#Author_by:Andy_xu </div><div class="line">#Contact:[mail:371990778@qq.com,QQ:371990778]</div><div class="line">#Date:2017-07-25 16:42</div><div class="line">#Description:</div><div class="line">if [ -z $NAME ];then</div><div class="line">	NAME=my-etcd-1</div><div class="line">fi</div><div class="line">if [ -z $DATADIR ];then</div><div class="line">	DATADIR=/export/etcd_data</div><div class="line">fi</div><div class="line">if [ -z $MYHOST ];then</div><div class="line">	MYHOST=http://localhost</div><div class="line">fi</div><div class="line">if [ -z $PORT ];then</div><div class="line">        PORT=2379</div><div class="line">fi</div><div class="line">if [ -z $CLUSTER_PORT ];then</div><div class="line">        CLUSTER_PORT=2380</div><div class="line">fi</div><div class="line">if [ -z $CLUSTER ];then </div><div class="line">	CLUSTER=my-etcd-1=http://localhost:2380</div><div class="line">fi</div><div class="line">if [ -z $CLUSTER_TOKEN ];then </div><div class="line">	CLUSTER_TOKEN=my-etcd-token</div><div class="line">fi</div><div class="line">if [ -z $CLUSTER_STATE ];then</div><div class="line">	CLUSTER_STATE=new</div><div class="line">fi</div><div class="line">	</div><div class="line">ETCD_CMD=&quot;etcd --name $&#123;NAME&#125; --data-dir $&#123;DATADIR&#125;  \</div><div class="line">	--listen-client-urls http://0.0.0.0:$&#123;PORT&#125;  \</div><div class="line">	--advertise-client-urls $&#123;MYHOST&#125;:$&#123;PORT&#125; \</div><div class="line">  	--listen-peer-urls $&#123;MYHOST&#125;:$&#123;CLUSTER_PORT&#125; \</div><div class="line">	--initial-advertise-peer-urls $&#123;MYHOST&#125;:$&#123;CLUSTER_PORT&#125; \</div><div class="line">	--initial-cluster $CLUSTER  \</div><div class="line">	 --initial-cluster-token $CLUSTER_TOKEN \</div><div class="line">	--initial-cluster-state $&#123;CLUSTER_STATE&#125; \</div><div class="line">	$*&quot;</div><div class="line">echo -e &quot;Running &apos;$ETCD_CMD&apos;\nBEGIN ETCD OUTPUT\n&quot;</div><div class="line">exec $ETCD_CMD</div></pre></td></tr></table></figure>
<h3 id="二、构建并使用image"><a href="#二、构建并使用image" class="headerlink" title="二、构建并使用image"></a>二、构建并使用image</h3><p><strong>1.构建etcd的image</strong></p>
<p>进入项目路径下，执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker build -t xxbandy123/etcd:3.0.10</div></pre></td></tr></table></figure></p>
<p><strong>2.使用默认参数创建etcd单实例</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -itd --name etcd-1 xxbandy123/etcd:3.0.10  --auto-compaction-retention 1</div></pre></td></tr></table></figure>
<p><code>注意：后面的 --auto-compaction-retention 1 为额外增加的参数表示1小时自动压缩保留
默认的容器启动后面都可以增加额外的参数</code></p>
<p><strong>3.使用自定义的参数进行创建etcd单实例</strong></p>
<p>image内部定义的默认参数如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">NAME=my-etcd-1</div><div class="line">DATADIR=/export/etcd_data</div><div class="line">MYHOST=http://localhost</div><div class="line">PORT=2379</div><div class="line">CLUSTER_PORT=2380</div><div class="line">CLUSTER=my-etcd-1=http://localhost:2380</div><div class="line">CLUSTER_TOKEN=my-etcd-token</div><div class="line">CLUSTER_STATE=new</div><div class="line"></div><div class="line"></div><div class="line">etcd --name $&#123;NAME&#125; --data-dir $&#123;DATADIR&#125;  \</div><div class="line">    --listen-client-urls http://0.0.0.0:$&#123;PORT&#125;  \</div><div class="line">    --advertise-client-urls $&#123;MYHOST&#125;:$&#123;PORT&#125; \</div><div class="line">    --listen-peer-urls $&#123;MYHOST&#125;:$&#123;CLUSTER_PORT&#125; \</div><div class="line">    --initial-advertise-peer-urls $&#123;MYHOST&#125;:$&#123;CLUSTER_PORT&#125; \</div><div class="line">    --initial-cluster $CLUSTER  \</div><div class="line">     --initial-cluster-token $CLUSTER_TOKEN \</div><div class="line">    --initial-cluster-state $&#123;CLUSTER_STATE&#125;</div></pre></td></tr></table></figure>
<p>可以通过环境变量的方式启动单实例的etcd，也可以将该image传入不通变量去构造集群</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -itd -e DATADIR=/root/etcd_data -e CLUSTER_TOKEN=biaoge xxbandy123/etcd:3.0.10 --auto-compaction-retention 1</div></pre></td></tr></table></figure>
<p><strong>4.如何使用etcd</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">docker pull xxbandy123/etcd:3.0.10</div><div class="line"></div><div class="line"># docker  ps -l</div><div class="line">CONTAINER ID        IMAGE                            COMMAND                  CREATED             STATUS              PORTS                                            NAMES</div><div class="line">e17c9479b424        xxbandy123/etcd:3.0.10   &quot;/docker-entrypoint.s&quot;   19 seconds ago      Up 17 seconds       0.0.0.0:1025-&gt;2379/tcp, 0.0.0.0:1024-&gt;2380/tcp   sharp_keller</div><div class="line"></div><div class="line"># docker  exec -it sharp_keller etcdctl set test biaoge</div><div class="line">biaoge</div><div class="line"></div><div class="line"># curl -s localhost:1025/v2/keys/test | jq .</div><div class="line">&#123;</div><div class="line">  &quot;node&quot;: &#123;</div><div class="line">    &quot;createdIndex&quot;: 4,</div><div class="line">    &quot;modifiedIndex&quot;: 4,</div><div class="line">    &quot;value&quot;: &quot;biaoge&quot;,</div><div class="line">    &quot;key&quot;: &quot;/test&quot;</div><div class="line">  &#125;,</div><div class="line">  &quot;action&quot;: &quot;get&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">在任何一个客户端去访问：</div><div class="line"># curl -s 10.241.131.109:1025/v2/keys/test | jq .</div><div class="line">&#123;</div><div class="line">  &quot;node&quot;: &#123;</div><div class="line">    &quot;createdIndex&quot;: 4,</div><div class="line">    &quot;modifiedIndex&quot;: 4,</div><div class="line">    &quot;value&quot;: &quot;biaoge&quot;,</div><div class="line">    &quot;key&quot;: &quot;/test&quot;</div><div class="line">  &#125;,</div><div class="line">  &quot;action&quot;: &quot;get&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="三、自由发挥时间"><a href="#三、自由发挥时间" class="headerlink" title="三、自由发挥时间"></a>三、自由发挥时间</h3><p>由于该etcd实例可以通过环境变量传入参数，因此虽然是一个image，但是却非常灵活，用户可以在很快的时间内创建出来一个etcd集群。So，学会如何构建一个etcd镜像后，可以尝试下使用该image来快速构建一个etcd集群。</p>
<p>为方便大家的使用，该image已经上传到docker hub中，读者可以直接在本地pull后进行使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull xxbandy123/etcd:3.0.10</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本篇文章手把手教你如何使用Dockerfile构建自己etcd镜像，并且已经提供基于etcd3.0.10 的image供读者使用，用户可以快速使用docker image构建自己的etcd集群环境&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="Dockerfile" scheme="http://yoursite.com/tags/Dockerfile/"/>
    
      <category term="Etcd" scheme="http://yoursite.com/tags/Etcd/"/>
    
  </entry>
  
  <entry>
    <title>Ansible-Etcd-cluster</title>
    <link href="http://yoursite.com/2017/08/26/Ansible-Etcd-cluster/"/>
    <id>http://yoursite.com/2017/08/26/Ansible-Etcd-cluster/</id>
    <published>2017-08-26T07:51:12.000Z</published>
    <updated>2017-08-29T15:45:55.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本篇文章记录一下使用<code>ansible-playbooks</code>进行快速构建一个可用的etcd集群。在阅读并实践本文章之前，请确保您有一个可用的<code>ansible</code>环境。</p>
</blockquote>
<a id="more"></a>
<h3 id="一、集群规划"><a href="#一、集群规划" class="headerlink" title="一、集群规划"></a>一、集群规划</h3><p><code>注意:本文档基于centos7+的操作系统上进行构建，在rhel7+系列也可用使用，其他发行版本可酌情参考</code></p>
<table>
<thead>
<tr>
<th>etcd_name</th>
<th>节点</th>
<th>端口</th>
</tr>
</thead>
<tbody>
<tr>
<td>etcd1</td>
<td>10.0.0.77</td>
<td>2379/2380</td>
</tr>
<tr>
<td>etcd2</td>
<td>10.0.0.78</td>
<td>2379/2380</td>
</tr>
<tr>
<td>etcd3</td>
<td>10.0.0.79</td>
<td>2379/2380</td>
</tr>
</tbody>
</table>
<p>以上节点详情信息用来规划集群规模以及名称角色，配置文件中<code>ETCD_INITIAL_CLUSTER</code>选项中的<code>etcd_name</code>和地址需要和主机规划中一致</p>
<h3 id="二、etcd集群部署"><a href="#二、etcd集群部署" class="headerlink" title="二、etcd集群部署"></a>二、etcd集群部署</h3><blockquote>
<p>环境前提：已经配置过ansible相关的环境，并且可以免密登录</p>
</blockquote>
<p><strong>1.etcd集群相关的配置文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div></pre></td><td class="code"><pre><div class="line">$ tree . </div><div class="line">.</div><div class="line">├──etcd-install.yml   #ansible-playbook 脚本</div><div class="line">├──etcd.conf.j2       #etcd主配置文件</div><div class="line">├──etcd.service       #systemd服务启动文件</div><div class="line">├──host               #etcd集群主机列表</div><div class="line"></div><div class="line"># ansible-playbooks 脚本</div><div class="line">$ cat etcd-install.yml</div><div class="line">---</div><div class="line">- hosts: &quot;&#123;&#123; host &#125;&#125;&quot;</div><div class="line">  remote_user: root</div><div class="line">  vars:</div><div class="line">    hostip: &quot;&#123;&#123; ansible_all_ipv4_addresses[0] &#125;&#125;&quot;</div><div class="line">    ipv6: &quot;&#123;&#123; ansible_all_ipv6_addresses[0].split(&apos;:&apos;)[-1] &#125;&#125;&quot;</div><div class="line">    packagedir: /tmp/</div><div class="line">    serverdir: /export/servers/</div><div class="line">    download: https://github.com/coreos/etcd/releases/</div><div class="line">    etcd_version: etcd-v3.1.5-linux-amd64</div><div class="line">  tasks:</div><div class="line">  - name: &quot;test ping&quot;</div><div class="line">    ping:</div><div class="line">  - name: &quot;init env&quot;</div><div class="line">    shell: &quot;mkdir -p /export/servers /etc/etcd/ /export/Data/etcd/ &quot;</div><div class="line"></div><div class="line"></div><div class="line">  - name: &quot;wget &#123;&#123; etcd_version &#125;&#125;&quot;</div><div class="line">    get_url:</div><div class="line">     url: &quot;&#123;&#123; item.url &#125;&#125;&quot;</div><div class="line">     dest: &quot;&#123;&#123; item.dest &#125;&#125;&quot;</div><div class="line">     mode: 0644</div><div class="line">     owner: root</div><div class="line">     group: root</div><div class="line">    with_items:</div><div class="line">        - &#123; url: &quot;&#123;&#123; download &#125;&#125;&#123;&#123; etcd_version &#125;&#125;.tar.gz&quot; , dest: &quot;&#123;&#123; packagedir &#125;&#125;&quot; &#125;</div><div class="line"></div><div class="line">  - name: &quot;untar the &#123;&#123; etcd_version &#125;&#125;&quot;</div><div class="line">    unarchive:</div><div class="line">     src: &quot;&#123;&#123; item.src &#125;&#125;&quot;</div><div class="line">     dest: &quot;&#123;&#123; item.dest &#125;&#125;&quot;</div><div class="line">     owner: root</div><div class="line">     group: root</div><div class="line">     remote_src: yes</div><div class="line">    with_items:</div><div class="line">      - &#123; src: &quot;&#123;&#123; packagedir &#125;&#125;&#123;&#123; etcd_version &#125;&#125;.tar.gz&quot;, dest: &quot;&#123;&#123; serverdir &#125;&#125;&quot; &#125;</div><div class="line"></div><div class="line">  - name: &quot;copy the etcd execfile&quot;</div><div class="line">    shell: &quot;cp -rp &#123;&#123; serverdir &#125;&#125;&#123;&#123; etcd_version &#125;&#125;/etcd* /usr/bin/&quot;</div><div class="line"></div><div class="line">  - name: &quot;init the es configuration!&quot;</div><div class="line">    template:</div><div class="line">      src: &quot;&#123;&#123; item.src &#125;&#125;&quot;</div><div class="line">      dest: &quot;&#123;&#123; item.dest &#125;&#125;&quot;</div><div class="line">      mode: 0755</div><div class="line">      owner: root</div><div class="line">      group: root</div><div class="line">    with_items:</div><div class="line">      #dest后面的引号与大括号中间一定不能有空格,还有后面引号的空格也要取消掉,不然文件会有空格</div><div class="line">      - &#123; src: &quot;etcd.conf.j2&quot;, dest: &quot;/etc/etcd/etcd.conf&quot; &#125;</div><div class="line">      - &#123; src: &quot;etcd.service&quot;, dest: &quot;/etc/systemd/system/&quot; &#125;</div><div class="line"></div><div class="line"># etcd主配置文件模板，这里采用jinja2模板引擎</div><div class="line">$ cat etcd.conf.j2</div><div class="line"># [member]</div><div class="line">BASE_DIR=&quot;/export&quot;</div><div class="line"># 由于etcd_name变量比较特殊，需要和ETCD_INITIAL_CLUSTER中的值一一对应，暂时写为etcd1,配置下发后需要将该值替换成对应节点的名称</div><div class="line">ETCD_NAME=&quot;etcd1&quot;</div><div class="line">ETCD_DATA_DIR=&quot;/export/Data/etcd&quot;</div><div class="line">ETCD_LISTEN_PEER_URLS=&quot;http://&#123;&#123; hostip &#125;&#125;:2380&quot;</div><div class="line">ETCD_LISTEN_CLIENT_URLS=&quot;http://&#123;&#123; hostip &#125;&#125;:2379&quot;</div><div class="line"></div><div class="line">#[cluster]</div><div class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://&#123;&#123; hostip &#125;&#125;:2380&quot;</div><div class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster&quot;</div><div class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;http://&#123;&#123; hostip &#125;&#125;:2379&quot;</div><div class="line"></div><div class="line">#[initial-cluster]</div><div class="line"># 需要按照etcd集群规划节点来填写</div><div class="line">ETCD_INITIAL_CLUSTER=&quot;etcd1=http://10.0.0.77:2380,etcd2=http://10.0.0.78:2380,etcd3=http://10.0.0.79:2380&quot;</div><div class="line"></div><div class="line"></div><div class="line"># systemd 启动脚本</div><div class="line">$ cat etcd.service</div><div class="line">[Unit]</div><div class="line">Description=Etcd Server</div><div class="line">After=network.target</div><div class="line">After=network-online.target</div><div class="line">Wants=network-online.target</div><div class="line">Documentation=https://github.com/coreos</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line"># 数据目录，需要提前进行创建</div><div class="line">WorkingDirectory=/export/Data/etcd/</div><div class="line">EnvironmentFile=-/etc/etcd/etcd.conf</div><div class="line">ExecStart=/usr/bin/etcd \</div><div class="line">  --name $&#123;ETCD_NAME&#125; \</div><div class="line">  --initial-advertise-peer-urls $&#123;ETCD_INITIAL_ADVERTISE_PEER_URLS&#125; \</div><div class="line">  --listen-peer-urls $&#123;ETCD_LISTEN_PEER_URLS&#125; \</div><div class="line">  --listen-client-urls $&#123;ETCD_LISTEN_CLIENT_URLS&#125;,http://127.0.0.1:2379 \</div><div class="line">  --advertise-client-urls $&#123;ETCD_ADVERTISE_CLIENT_URLS&#125; \</div><div class="line">  --initial-cluster-token $&#123;ETCD_INITIAL_CLUSTER_TOKEN&#125; \</div><div class="line">  --initial-cluster $&#123;ETCD_INITIAL_CLUSTER&#125; \</div><div class="line">  --initial-cluster-state new \</div><div class="line">  --data-dir=$&#123;ETCD_DATA_DIR&#125;</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line">LimitNOFILE=65536</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line"></div><div class="line">$ cat hosts</div><div class="line">[etcd]</div><div class="line">10.0.0.77</div><div class="line">10.0.0.78</div><div class="line">10.0.0.79</div></pre></td></tr></table></figure></p>
<p><strong>2.使用ansible-playbooks进行部署etcd集群</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ansible-playbook -i host -e host=etcd etcd-install.yml</div></pre></td></tr></table></figure>
<p>等待正确执行完成之后，三个节点的etcd就已经安装好了，由于是集群，所以各个节点上的配置还是有专属的部分，暂时没有想到如何进行一次性安装启动，将安装、修改配置、启动作为三部分操作.</p>
<p><strong>3.登录每个节点进行修改etcd_name</strong></p>
<p>修改每个节点上的<code>/etc/etcd/etcd.conf</code>文件:<br><code>注意：需要将各个节点ip和etcd_name对应起来(etcd1-&gt;77 etcd2-&gt;78 etcd-&gt;79)</code></p>
<p>77节点上的配置如下(其他两个节点修改对应的etcd_name)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ETCD_NAME=&quot;etcd1&quot;</div><div class="line">ETCD_INITIAL_CLUSTER=&quot;etcd1=http://10.0.0.77:2380,etcd2=http://10.0.0.78:2380,etcd3=http://10.0.0.79:2380&quot;</div></pre></td></tr></table></figure>
<p><strong>4.检测配置文件并进行启动集群</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ansible -i host all -m shell -a &apos;systemctl daemon-reload &amp;&amp; systemctl start etcd &amp;&amp; systemctl enable etcd&apos;</div></pre></td></tr></table></figure>
<p><code>注意：由于etcd采用集群模式，在启动第一个实例的时候会一直监听其他实例，这个时候需要尽快启动其他实例，以完成集群发现，否则第一个实例会在一定时间内挂掉</code></p>
<p><strong>5.集群状态监测</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ etcdctl cluster-health</div><div class="line">member 4d946fabd2e1eb9f is healthy: got healthy result from http://10.0.0.79:2379</div><div class="line">member 805150a1f1a44604 is healthy: got healthy result from http://10.0.0.77:2379</div><div class="line">member 81ddc2f4095fe8a1 is healthy: got healthy result from http://10.0.0.78:2379</div><div class="line">cluster is healthy</div><div class="line"></div><div class="line">$ etcdctl member list</div><div class="line">4d946fabd2e1eb9f: name=etcd3 peerURLs=http://10.0.0.79:2380 clientURLs=http://10.0.0.79:2379 isLeader=true</div><div class="line">805150a1f1a44604: name=etcd1 peerURLs=http://10.0.0.77:2380 clientURLs=http://10.0.0.77:2379 isLeader=false</div><div class="line">81ddc2f4095fe8a1: name=etcd2 peerURLs=http://10.0.0.78:2380 clientURLs=http://10.0.0.78:2379 isLeader=false</div></pre></td></tr></table></figure>
<p>如此，可以发现我们的etcd集群已经迅速运行起来了！</p>
<h3 id="三、etcd集群的基本使用"><a href="#三、etcd集群的基本使用" class="headerlink" title="三、etcd集群的基本使用"></a>三、etcd集群的基本使用</h3><p><code>注意1:</code>由于是集群模式，所以可用在任何一个节点进行写入操作，用户也可用使用etcd的http接口进行使用<br><code>注意2:</code>etcd v2和v3的API是完全不同的两个存储实现，所以用户在使用的时候需要注意<code>在etcd v2版本中是采用set存数据的，v3版本中采用put方式</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">指定API版本</div><div class="line"># export ETCDCTL_API=3</div><div class="line"># etcdctl  put foo &quot;Hello World!&quot;</div><div class="line"># etcdctl get foo</div><div class="line">以json格式输出</div><div class="line"># etcdctl --write-out=&quot;json&quot; get foo</div></pre></td></tr></table></figure>
<p><strong>通过前缀获取数据</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">etcdctl --endpoints=$ENDPOINTS put web1 value1</div><div class="line">etcdctl --endpoints=$ENDPOINTS put web2 value2</div><div class="line">etcdctl --endpoints=$ENDPOINTS put web3 value3</div><div class="line"></div><div class="line">etcdctl --endpoints=$ENDPOINTS get web --prefix</div><div class="line">web1</div><div class="line">value1</div><div class="line">web2</div><div class="line">value2</div><div class="line">web3</div><div class="line">value3</div></pre></td></tr></table></figure>
<p><strong>删除数据</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">etcdctl --endpoints=$ENDPOINTS put key myvalue</div><div class="line">etcdctl --endpoints=$ENDPOINTS del key</div><div class="line"></div><div class="line">etcdctl --endpoints=$ENDPOINTS put k1 value1</div><div class="line">etcdctl --endpoints=$ENDPOINTS put k2 value2</div><div class="line">etcdctl --endpoints=$ENDPOINTS del k --prefix</div></pre></td></tr></table></figure>
<p><strong>集群状态信息</strong></p>
<p><code>v3 的API才有这个功能</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">etcdctl --write-out=table  --endpoints=$&#123;HOST_1&#125;:2379,$&#123;HOST_2&#125;:2379,$&#123;HOST_3&#125;:2379 endpoint status</div><div class="line">+-------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">|     ENDPOINT      |        ID        | VERSION | DB SIZE | IS LEADER | RAFT TERM | RAFT INDEX |</div><div class="line">+-------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">| 10.0.0.77:2379 | 805150a1f1a44604 | 3.1.5   | 1.2 MB  | false     |       639 |     188421 |</div><div class="line">| 10.0.0.78:2379 | 81ddc2f4095fe8a1 | 3.1.5   | 1.2 MB  | false     |       639 |     188421 |</div><div class="line">| 10.0.0.79:2379 | 4d946fabd2e1eb9f | 3.1.5   | 1.2 MB  | true      |       639 |     188421 |</div><div class="line">+-------------------+------------------+---------+---------+-----------+-----------+------------+</div></pre></td></tr></table></figure></p>
<!--more-->
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本篇文章记录一下使用&lt;code&gt;ansible-playbooks&lt;/code&gt;进行快速构建一个可用的etcd集群。在阅读并实践本文章之前，请确保您有一个可用的&lt;code&gt;ansible&lt;/code&gt;环境。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Ansible" scheme="http://yoursite.com/categories/Ansible/"/>
    
    
      <category term="Ansible" scheme="http://yoursite.com/tags/Ansible/"/>
    
      <category term="Etcd-Cluster" scheme="http://yoursite.com/tags/Etcd-Cluster/"/>
    
  </entry>
  
</feed>
